{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Web/Projects/Alan/Learning/my-tool-default/src/components/Pages/SecondPage/SecondPage.tsx\",\n    _s = $RefreshSig$();\n\n// TODO: *** POBIERANIE DANYCH PRZY UZYCIU FETCH, PO NACISNIECIU BUTTONA\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SecondPage = () => {\n  _s();\n\n  const [users, setUsers] = useState();\n\n  const getUsers = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users/\").then(persons => persons.json()).then(json => setUsers(json));\n  };\n\n  const displayUsers = () => {\n    if (users) {\n      return users.map(user => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 39\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get users names: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayUsers,\n      children: \"GET USERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SecondPage, \"843VOBV+vPhEQh0TUziUGM90u0o=\");\n\n_c = SecondPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondPage\");","map":{"version":3,"names":["React","useState","SecondPage","users","setUsers","getUsers","fetch","then","persons","json","displayUsers","map","user"],"sources":["/Users/tom/Web/Projects/Alan/Learning/my-tool-default/src/components/Pages/SecondPage/SecondPage.tsx"],"sourcesContent":["// TODO: *** POBIERANIE DANYCH PRZY UZYCIU FETCH, PO NACISNIECIU BUTTONA\n\nimport React from \"react\";\nimport { useState } from \"react\";\n\nexport const SecondPage = () => {\n  const [users, setUsers] = useState<any>();\n\n  const getUsers = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users/\")\n      .then((persons) => persons.json())\n      .then((json) => setUsers(json));\n  };\n\n  const displayUsers = () => {\n    if (users) {\n      return users.map((user: any) => <h3>{user}</h3>);\n    }\n  };\n\n  return (\n    <>\n      <h1>Get users names: </h1>\n      <button onClick={displayUsers}>GET USERS</button>\n    </>\n  );\n};\n"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,EAAlC;;EAEA,MAAMI,QAAQ,GAAG,MAAM;IACrBC,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACSC,OAAD,IAAaA,OAAO,CAACC,IAAR,EADrB,EAEGF,IAFH,CAESE,IAAD,IAAUL,QAAQ,CAACK,IAAD,CAF1B;EAGD,CAJD;;EAMA,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAIP,KAAJ,EAAW;MACT,OAAOA,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBAAe;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA,QAAzB,CAAP;IACD;EACF,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEF,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CArBM;;GAAMR,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}